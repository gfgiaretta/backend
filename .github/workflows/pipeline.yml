
name: pipeline

on:
  pull_request:
    branches: [dev]

permissions:
  contents: write

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: .env
        run: |
          "APP_PORT=${{ secrets.APP_PORT }}" >> .env
          "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
          "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
      - uses: actions/setup-node@v3.9.1
        with:
          node-version: 22.x
      - name: setup
        run: npm ci
      - name: Unit tests
        run: npm run test

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3.9.1
        with:
          node-version: 22.x
      - name: .env
        run: |
          "APP_PORT=${{ secrets.APP_PORT }}" >> .env
          "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
          "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
      - name: setup
        run: npm run setup
      - name: Lint
        run: npm run lint

  pipeline:
    needs:
      - unit-tests
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Dev
        run: echo "Dev Stage completed!"
